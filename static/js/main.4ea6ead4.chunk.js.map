{"version":3,"sources":["components/App.module.css","components/shared/Form.js","components/shared/Label.js","components/shared/Input.js","components/shared/Button.js","components/BudgetForm/BudgetForm.js","redux/BudgetApp/BudgetAppActions.js","components/BudgetForm/BudgetFormContainer.js","components/ExpenseForm/ExpenseForm.js","components/ExpenseForm/ExpenseFormContainer.js","components/ExpensesTable/ExpensesTable.js","redux/BudgetApp/BudgetAppSelectors.js","components/ExpensesTable/ExpensesTableContainer.js","components/Stat/Stat.js","components/Values/Values.js","components/Values/ValuesContainer.js","components/App.js","redux/BudgetApp/BudgetAppReducer.js","redux/store.js","index.js"],"names":["module","exports","StyledForm","styled","form","Form","onSubmit","children","StyledLabel","label","props","customStyles","Label","StyledInput","input","Input","type","value","onChange","name","defaultProps","StyledButton","button","Button","onClick","BudgetForm","state","handleChange","e","setState","target","handleSubmit","preventDefault","getBudget","this","Component","Type","mapDispatchToProps","budget","payload","connect","ExpenseForm","amount","expense","id","shortid","generate","Number","getExpenses","expenses","Table","table","ExpensesTable","items","onRemove","length","map","key","getÐ¡alculateTotalExpenses","reduce","total","getCalculateBalance","dispatch","Container","div","isPositive","p","Value","Stat","section","Values","balance","App","className","css","container","BudgetAppReducer","combineReducers","filter","store","createStore","devToolsEnhancer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ea6ead4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__LM7_a\",\"App-logo\":\"App_App-logo__3hhGi\",\"App-header\":\"App_App-header__1Q5ei\",\"App-link\":\"App_App-link__AGai-\",\"container\":\"App_container__11cut\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 100%;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst Form = ({ onSubmit = () => null, children }) => (\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\n);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  children: PropTypes.arrayOf(PropTypes.object, PropTypes.func).isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledLabel = styled.label`\n  display: inline-block;\n  font-size: 20px;\n  color: #171718;\n  cursor: pointer;\n  ${props => props.customStyles}\n`;\n\nconst Label = ({ children, customStyles }) => (\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\n);\n\nLabel.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  customStyles: PropTypes.string.isRequired,\n};\n\nexport default Label;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledInput = styled.input`\n  color: #171718;\n  font: inherit;\n  font-size: 1.2rem;\n  padding: 16px;\n  border-radius: 4px;\n  border: 1px solid #bdbdbd;\n  width: 100%;\n  outline: 0;\n\n  &:focus {\n    border: 1px solid #2b32b2;\n  }\n`;\n\nconst Input = ({\n  type = 'text',\n  value = '',\n  onChange = () => null,\n  name = '',\n}) => <StyledInput type={type} value={value} onChange={onChange} name={name} />;\n\nexport default Input;\n\nInput.defaultProps = {\n  name: '',\n};\n\nInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  background-color: #3f51b5;\n  border: 0;\n  outline: 0;\n  padding: 8px 24px;\n  border-radius: 4px;\n  cursor: pointer;\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\n  font: inherit;\n  text-transform: uppercase;\n  user-select: none;\n\n  transition: background-color 200ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\n    background-color: #303f9f;\n  }\n`;\n\nconst Button = ({ type = 'button', label = '', onClick = () => null }) => (\n  <StyledButton type={type} onClick={onClick}>\n    {label}\n  </StyledButton>\n);\n\nButton.defaultProps = {\n  onClick: null,\n  type: '',\n};\n\nButton.propTypes = {\n  type: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from '../shared/Form';\nimport Label from '../shared/Label';\nimport Input from '../shared/Input';\nimport Button from '../shared/Button';\n\nconst labelStyles = `\n  margin-bottom: 16px;\n`;\n\nclass BudgetForm extends Component {\n  state = { value: 0 };\n\n  static propTypes = {\n    getBudget: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.getBudget(this.state.value);\n    this.setState({ value: 0 });\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter your total budget\n          <Input type=\"number\" value={value} onChange={this.handleChange} />\n        </Label>\n\n        <Button label=\"Save\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nexport default BudgetForm;\n","export const Type = {\n  GET_BUDGET: 'GET_BUDGET',\n  GET_EXPENSES: 'GET_EXPENSES',\n  DELETE_EXPENSE: 'DELETE_EXPENSE',\n};\n\nexport const getBudget = budget => ({\n  type: Type.GET_BUDGET,\n  payload: budget,\n});\n\nexport const getExpenses = expenses => ({\n  type: Type.GET_EXPENSES,\n  payload: expenses,\n});\n\nexport const deleteExpense = expenses => ({\n  type: Type.DELETE_EXPENSE,\n  payload: expenses,\n});\n","import { connect } from 'react-redux';\nimport BudgetForm from './BudgetForm';\nimport { getBudget } from '../../redux/BudgetApp/BudgetAppActions';\n\nconst mapDispatchToProps = {\n  getBudget,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(BudgetForm);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport Form from '../shared/Form';\nimport Label from '../shared/Label';\nimport Input from '../shared/Input';\nimport Button from '../shared/Button';\n\nconst labelStyles = `\n  margin-bottom: 16px;\n`;\n\nexport default class ExpenseForm extends Component {\n  state = {\n    name: '',\n    amount: 0,\n  };\n\n  static propTypes = {\n    getExpenses: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, amount } = this.state;\n    const expense = {\n      id: shortid.generate(),\n      name,\n      amount: Number(amount),\n    };\n    this.props.getExpenses(expense);\n\n    this.setState({ name: '', amount: 0 });\n  };\n\n  render() {\n    const { name, amount } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter expense name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </Label>\n        <Label customStyles={labelStyles}>\n          Enter expense amount\n          <Input\n            type=\"number\"\n            name=\"amount\"\n            value={amount}\n            onChange={this.handleChange}\n          />\n        </Label>\n\n        <Button label=\"Add\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport ExpenseForm from './ExpenseForm';\nimport { getExpenses } from '../../redux/BudgetApp/BudgetAppActions';\n\nconst mapDispatchToProps = {\n  getExpenses,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(ExpenseForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Button from '../shared/Button';\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  width: 100%;\n\n  tr {\n    border-bottom: 1px solid #212121;\n  }\n\n  td,\n  th {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nconst ExpensesTable = ({ items, onRemove }) => (\n  <Table>\n    <thead>\n      <tr>\n        <th>Expense name</th>\n        <th>Expense amount</th>\n        <th />\n      </tr>\n    </thead>\n    <tbody>\n      {items.length > 0 &&\n        items.map(({ id, name, amount }) => (\n          <tr key={id}>\n            <td>{name}</td>\n            <td>{amount}</td>\n            <td>\n              <Button label=\"Delete\" onClick={() => onRemove(id)} />\n            </td>\n          </tr>\n        ))}\n    </tbody>\n  </Table>\n);\n\nExpensesTable.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ExpensesTable;\n","export const getBudget = state => state.budget;\n\nexport const getÐ¡alculateTotalExpenses = state => {\n  return state.expenses.reduce((total, expense) => total + expense.amount, 0);\n};\n\nexport const getCalculateBalance = state =>\n  getBudget(state) - getÐ¡alculateTotalExpenses(state);\n\nexport const getExpenses = state => state.expenses;\n\n// export const filterExpenses = (state) => {\n//   return state.filter(expense => expense.id !== id);\n// };\n","import { connect } from 'react-redux';\nimport ExpensesTable from './ExpensesTable';\nimport { getExpenses } from '../../redux/BudgetApp/BudgetAppSelectors';\nimport { deleteExpense } from '../../redux/BudgetApp/BudgetAppActions';\n\nconst mapStateToProps = state => ({\n  items: getExpenses(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onRemove: id => dispatch(deleteExpense(id)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ExpensesTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  text-align: center;\n  padding: 8px 24px;\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\n  user-select: none;\n`;\n\nconst Label = styled.p`\n  margin-top: 0;\n  margin-bottom: 8px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nconst Value = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 48px;\n`;\n\nconst Stat = ({ label, value, isPositive }) => (\n  <Container isPositive={isPositive}>\n    <Label>{label}</Label>\n    <Value>{value}&nbsp;&#x24;</Value>\n  </Container>\n);\n\nexport default Stat;\n\nStat.defaultProps = {\n  isPositive: false,\n};\n\nStat.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  isPositive: PropTypes.bool,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Stat from '../Stat/Stat';\n\nconst Container = styled.section`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Values = ({ budget, expenses, balance }) => (\n  <Container>\n    <Stat label=\"Budget\" value={budget} isPositive />\n    <Stat label=\"Expenses\" value={expenses} />\n    <Stat label=\"Balance\" value={balance} isPositive={balance >= 0} />\n  </Container>\n);\n\nValues.propTypes = {\n  budget: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  expenses: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default Values;\n","import { connect } from 'react-redux';\nimport Values from './Values';\nimport {\n  getBudget,\n  getÐ¡alculateTotalExpenses,\n  getCalculateBalance,\n} from '../../redux/BudgetApp/BudgetAppSelectors';\n\nconst mapStateToProps = state => ({\n  budget: getBudget(state),\n  expenses: getÐ¡alculateTotalExpenses(state),\n  balance: getCalculateBalance(state),\n});\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(Values);\n","import React from 'react';\nimport BudgetForm from './BudgetForm/BudgetFormContainer';\nimport ExpenseForm from './ExpenseForm/ExpenseFormContainer';\nimport ExpensesTable from './ExpensesTable/ExpensesTableContainer';\nimport Values from './Values/ValuesContainer';\nimport css from './App.module.css';\n\nconst App = () => {\n  return (\n    <div className={css.container}>\n      <BudgetForm />\n      <Values />\n      <ExpenseForm />\n      <ExpensesTable />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { Type } from './BudgetAppActions';\n\nconst budget = (state = 0, { type, payload }) => {\n  switch (type) {\n    case Type.GET_BUDGET:\n      return payload;\n    default:\n      return state;\n  }\n};\n\nconst expenses = (state = [], { type, payload }) => {\n  switch (type) {\n    case Type.GET_EXPENSES:\n      return [payload, ...state];\n    case Type.DELETE_EXPENSE:\n      return state.filter(expense => expense.id !== payload);\n    default:\n      return state;\n  }\n};\n\nexport const BudgetAppReducer = combineReducers({\n  budget,\n  expenses,\n});\n","import { createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport { BudgetAppReducer } from './BudgetApp/BudgetAppReducer';\n\nconst store = createStore(BudgetAppReducer, devToolsEnhancer());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './redux/store';\nimport './styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}